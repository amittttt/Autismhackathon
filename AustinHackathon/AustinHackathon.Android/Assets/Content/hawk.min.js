var hawkGraphs = function (a) { var t = { formatNumber: function (a) { isNegative = !1, a < 0 && (isNegative = !0); var t = a, e = ""; return (a = Math.abs(a)) >= 1e9 ? (t = a / 1e9, e = "B") : a >= 1e6 ? (t = a / 1e6, e = "M") : a >= 1e3 ? (t = a / 1e3, e = "K") : t = a, formattedNumber = t.toFixed(1).replace(/\.0$/, "") + e, isNegative && (formattedNumber = "-" + formattedNumber), formattedNumber } }; t.incomingData = a, t.hawkDebug = !1, t.getMinutesSinceLastUpdate = function () { t.lastDate = new Date(t.lastDate); var a = t.now - t.lastDate, e = Math.floor(a / 864e5), s = Math.floor(a % 864e5 / 36e5), l = ""; return e > 0 && (l += e + " days, "), s > 0 && (l += s + " hours, "), l += Math.round(a % 864e5 % 36e5 / 6e4) + " minutes", t.hawkDebug && console.log("hawk.getMinutesSinceLastUpdate @lastDate=" + t.lastDate + " @now=" + t.now + " @diff=" + l), l }, t.setLastUpdatedDate = function (a) { null != t.data[a].Results[0].SubResults[0].Timestamp && null != t.data[a].Results[0].SubResults[0].Timestamp && t.isLargerDate(t.data[a].Results[0].SubResults[t.data[a].Results[0].SubResults.length - 1].Timestamp) && (t.lastDate = t.data[a].Results[0].SubResults[t.data[a].Results[0].SubResults.length - 1].Timestamp) }, t.isLargerDate = function (a) { return t.lastDate = new Date(t.lastDate), (a = new Date(a)) > t.lastDate ? (t.hawkDebug && console.log("hawk.isLargerDate @result=T"), !0) : (t.hawkDebug && console.log("hawk.isLargerDate @result=F"), !1) }, t.listenFilterChange = function (a, e) { t.hawkDebug && console.log("hawk.listenFilterChange @filter=" + t.filters[e].label + " @index=" + a), $(".sel-" + t.filters[e].label.toString().toLowerCase()).change(function (s, l = a) { t.hawkDebug && console.log("hawk.listenFilterChange @FilterValueChanged! @filter=" + t.filters[e].label + " @index=" + l); 1 == e ? t.filters[e].active = parseInt($(this).val()) : (t.filters[e].active = $(this).val(), 2 == e && 4 == parseInt(t.data[l].FiltersApplied) && ($(".filter3").remove(), t.filters[3].inputShowing = !1, t.createFilter(l, 3))), t.hawkDebug && console.log("hawk.listenFilterChange @filter=" + t.filters[e].label + " @valueChange=" + t.filters[e].active), t.updateGraphByFilter(e) }) }, t.createFilter = function (a, e) { if (0 == t.filters[e].inputShowing) { if (t.hawkDebug && console.log("hawk.createFilter @filter=" + t.filters[e].label), 3 == e) { var s = $(".sel-region").val(); t.filters[e].filterValues = []; for (var l = 0; l < t.data[a].Results.length; l++)4 == parseInt(t.data[a].FiltersApplied) ? -1 === t.filters[e].filterValues.indexOf(t.data[a].Results[l][t.filters[e].label]) && t.data[a].Results[l].Region == s && t.filters[e].filterValues.push(t.data[a].Results[l][t.filters[e].label]) : -1 === t.filters[e].filterValues.indexOf(t.data[a].Results[l][t.filters[e].label]) && t.filters[e].filterValues.push(t.data[a].Results[l][t.filters[e].label]) } else if (1 != e) for (l = 0; l < t.data[a].Results.length; l++)-1 === t.filters[e].filterValues.indexOf(t.data[a].Results[l][t.filters[e].label]) && t.filters[e].filterValues.push(t.data[a].Results[l][t.filters[e].label]); var n = '<div class="select-container filter' + e + '">' + t.filters[e].label + ' <select class="sel-input sel-' + t.filters[e].label.toString().toLowerCase() + '">'; for (var r in t.filters[e].filterValues) n += 1 == e ? '<option value="' + t.filters[e].filterValues[r].value + '">' + t.filters[e].filterValues[r].label + "</option>" : '<option value="' + t.filters[e].filterValues[r] + '">' + t.filters[e].filterValues[r] + "</option>"; n += "</select></div>", $(".filters").append(n), t.filters[e].inputShowing = !0, 0 == e || 2 == e ? (-1 != t.filters[e].filterValues.indexOf("us") ? t.filters[e].active = "us" : -1 != t.filters[e].filterValues.indexOf("All") ? t.filters[e].active = "All" : t.filters[e].active = t.filters[e].filterValues[0], $(".filter" + e + " select").val(t.filters[e].active)) : 3 == e && (-1 != t.filters[e].filterValues.indexOf("All") ? t.filters[e].active = "All" : t.filters[e].active = t.filters[e].filterValues[0], $(".filter" + e + " select").val(t.filters[e].active)), t.hawkDebug && console.log("hawk.createFilter @filter=" + t.filters[e].label + " @active=" + t.filters[e].active), t.listenFilterChange(a, e) } }, t.createFilters = function () { t.hawkDebug && console.log("hawk.createFilters"); for (var a = 0, e = 0; e < t.data.length; e++)switch (-1 != parseInt(t.data[e].FiltersApplied) && (a = 1), parseInt(t.data[e].FiltersApplied)) { case -1: break; case 1: t.createFilter(e, 0); break; case 2: t.createFilter(e, 1); break; case 3: t.createFilter(e, 0), t.createFilter(e, 1); break; case 4: t.createFilter(e, 2), t.createFilter(e, 3); break; case 5: t.createFilter(e, 2); break; case 6: t.createFilter(e, 3) }a || $(".filters").remove() }, t.updateGraphByFilter = function (a) { t.hawkDebug && console.log("hawk.updateGraphByFilter @filter=" + t.filters[a].label); for (var e = 0; e < t.data.length; e++)switch (a) { case 0: 1 != parseInt(t.data[e].FiltersApplied) && 3 != parseInt(t.data[e].FiltersApplied) || t.redrawGraph(e); break; case 1: 2 != parseInt(t.data[e].FiltersApplied) && 3 != parseInt(t.data[e].FiltersApplied) || t.redrawGraph(e); break; case 2: 4 != parseInt(t.data[e].FiltersApplied) && 5 != parseInt(t.data[e].FiltersApplied) || t.redrawGraph(e); case 3: 4 != parseInt(t.data[e].FiltersApplied) && 6 != parseInt(t.data[e].FiltersApplied) || t.redrawGraph(e) } }, t.filterDataForGraph = function (a) { var e = -1; switch (t.data[a].FiltersApplied) { case -1: e = 0; break; case 1: for (var s = 0; s < t.data[a].Results.length; s++)t.data[a].Results[s].Country === t.filters[0].active && (e = s); break; case 2: for (s = 0; s < t.data[a].Results.length; s++)t.data[a].Results[s].Segment === t.filters[1].active && (e = s); break; case 3: for (s = 0; s < t.data[a].Results.length; s++)t.data[a].Results[s].Country === t.filters[0].active && t.data[a].Results[s].Segment === t.filters[1].active && (e = s); break; case 4: for (s = 0; s < t.data[a].Results.length; s++)t.data[a].Results[s].Region === t.filters[2].active && t.data[a].Results[s].Identity === t.filters[3].active && (e = s); break; case 5: for (s = 0; s < t.data[a].Results.length; s++)t.data[a].Results[s].Region === t.filters[2].active && (e = s); break; case 6: for (s = 0; s < t.data[a].Results.length; s++)t.data[a].Results[s].Identity === t.filters[3].active && (e = s); break; default: e = -1 }return t.hawkDebug && console.log("hawk.filterDataForGraph @graphID=" + a + " @resultIndex=" + e), e }, t.get3xxCount = function (a) { var e = t.data[a].Results[0].SubResults.map(function (a) { return parseInt(a.StackedBar3Value) }).reduce(function (a, t) { return a + t }); return t.hawkDebug && console.log("hawk.get3xxCount @sum=" + e), e }, t.createPieGraph = function (a, e) { t.hawkDebug && console.log("hawk.createPieGraph @graphID=" + a), t.data[a].config.totalCount = 0, t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + '</div><svg class="graph"></svg><div class="graph-legend graph-legend-pie"></div>', t.data[a].config.radius = Math.min(t.svgWidth, t.svgHeight) / 2; for (var s = new Array, l = 0; l < t.data[a].Results[e].SubResults.length; l++)null != t.data[a].Results[e].SubResults[l].Color && null != t.data[a].Results[e].SubResults[l].Color && "" != t.data[a].Results[e].SubResults[l].Color && s.push(t.data[a].Results[e].SubResults[l].Color); s = s.concat(t.colors), t.data[a].config.colors = d3.scaleOrdinal().range(s), t.data[a].config.arc = d3.arc().outerRadius(t.data[a].config.radius).innerRadius(.4 * t.data[a].config.radius), t.data[a].config.pie = d3.pie().sort(null).startAngle(1.1 * Math.PI).endAngle(3.1 * Math.PI).value(function (a) { return a.Value }), $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth), d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.svgHeight).append("g").attr("transform", "translate(" + t.svgWidth / 2 + "," + t.svgHeight / 2 + ")").selectAll(".arc").data(t.data[a].config.pie(t.data[a].Results[e].SubResults)).enter().append("path").style("fill", function (e, s) { return t.data[a].config.colors(s) }).transition().delay(function (a, t) { return 300 * t }).duration(300).attrTween("d", function (e) { var s = d3.interpolate(e.startAngle + .1, e.endAngle); return function (l) { return e.endAngle = s(l), t.data[a].config.arc(e) } }), t.createLegend(a, e, s) }, t.generateFunnelCoords = function (a) { for (var e = [], s = [{ x: 0, y: 10 }, { x: 0, y: 9 }, { x: 0, y: 8 }, { x: 1, y: 5 }, { x: 3, y: 3 }, { x: 4, y: 2 }, { x: 6, y: 1 }, { x: 10, y: 0 }], l = [{ x: 490, y: 0 }, { x: 494, y: 1 }, { x: 496, y: 2 }, { x: 497, y: 3 }, { x: 499, y: 5 }, { x: 500, y: 8 }, { x: 500, y: 9 }, { x: 500, y: 10 }], n = [{ x: 485, y: 65 }, { x: 483, y: 70 }, { x: 480, y: 74 }, { x: 478, y: 76 }, { x: 476, y: 78 }, { x: 474, y: 79 }, { x: 471, y: 80 }, { x: 470, y: 80 }], r = [{ x: 25, y: 80 }, { x: 23, y: 80 }, { x: 20, y: 79 }, { x: 18, y: 78 }, { x: 16, y: 76 }, { x: 14, y: 74 }, { x: 11, y: 70 }, { x: 10, y: 65 }], i = t.svgWidth / 500, u = 0; u < 6; u++) { var d = []; s.forEach(function (a) { d.push({ x: (a.x + 25 * u) * i, y: (a.y + 120 * u) * i }) }), l.forEach(function (a) { d.push({ x: (a.x - 25 * u) * i, y: (a.y + 120 * u) * i }) }), n.forEach(function (a) { d.push({ x: (a.x - 25 * u) * i, y: (a.y + 120 * u) * i }) }), r.forEach(function (a) { d.push({ x: (a.x + 25 * u) * i, y: (a.y + 120 * u) * i }) }), e.push(d) } return t.hawkDebug && (console.log("hawk.generateFunnelCoords @graphID=" + a + " @coords="), console.log(e)), e }, t.createFunnelGraph = function (a, e) { var s; t.hawkDebug && console.log("hawk.createFunnelGraph @graphID=" + a), t.data[a].config.points = t.generateFunnelCoords(a), t.data[a].config.html = '<div class="graph-title">Cart to Checkout Funnel</div><svg class="graph"></svg>', t.data[a].config.line = d3.line().x(function (a) { return a.x }).y(function (a) { return a.y }), $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth), t.data[a].config.graphHeight = t.data[a].Results[e].SubResults.length * (t.data[a].config.points[1][6].y - t.data[a].config.points[0][6].y), t.hawkDebug && console.log("@numBars=" + t.data[a].Results[e].SubResults.length + " @2ndBarTop=" + t.data[a].config.points[1][21].y + " @1stBarTop=" + t.data[a].config.points[0][6].y + " @svgHeight=" + t.svgHeight), s = d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.data[a].config.graphHeight).append("g").attr("transform", "translate(0,0)"); for (var l = 0; l < t.data[a].Results[e].SubResults.length; l++)s.append("path").style("fill", t.funnelColors[l]).style("stroke", "none").attr("d", t.data[a].config.line(t.data[a].config.points[l]) + "Z"), s.append("text").attr("x", (t.data[a].config.points[l][8].x - t.data[a].config.points[l][0].x - 5 * (t.data[a].Results[e].SubResults[l].Label.length + 2)) / 2 + t.data[a].config.points[l][0].x).attr("y", t.data[a].config.points[l][0].y + 10).attr("class", "funnel-title").text(t.data[a].Results[e].SubResults[l].Label), -1 !== parseInt(t.data[a].Results[e].SubResults[l].Percent) && (null != t.data[a].Results[e].SubResults[l].Percent && "" != t.data[a].Results[e].SubResults[l].Percent || (t.data[a].Results[e].SubResults[l].Percent = 0), s.append("text").attr("x", t.data[a].config.points[l][0].x + 15).attr("y", t.data[a].config.points[l][0].y + 15).attr("class", "funnel-perc").text(t.data[a].Results[e].SubResults[l].Percent + "%")), -1 !== parseInt(t.data[a].Results[e].SubResults[l].SubPercent) && (null != t.data[a].Results[e].SubResults[l].SubPercent && "" != t.data[a].Results[e].SubResults[l].SubPercent || (t.data[a].Results[e].SubResults[l].SubPercent = 0), s.append("text").attr("x", t.data[a].config.points[l][16].x - 40).attr("y", t.data[a].config.points[l][16].y + 30).attr("class", "funnel-sub-perc").text(t.data[a].Results[e].SubResults[l].SubPercent + "%")), s.append("text").attr("x", (t.data[a].config.points[l][16].x - t.data[a].config.points[l][3].x - 6 * (t.data[a].Results[e].SubResults[l].Value.toString().length + 15)) / 2 + t.data[a].config.points[l][24].x).attr("y", t.data[a].config.points[l][16].y).attr("class", "funnel-count").text(t.formatNumber(t.data[a].Results[e].SubResults[l].Value) + " visitors") }, t.createSalesTable = function (a, e) { t.hawkDebug && console.log("hawk.createTable @graphID=" + a), t.data[a].config.html = '<div class="row table-header"><div class="row-data">Sales</div><div class="row-data">Total Orders</div><div class="row-data">Total Revenue ' + t.data[a].Results[e].SubResults[0].Currency + '</div><div class="row-data">Order Percentage</div><div class="row-data">Margin Percentage</div></div>'; for (var s = 0; s < t.data[a].Results[e].SubResults.length; s++)t.data[a].config.html += '<div class="row"><div class="row-data">' + t.data[a].Results[e].SubResults[s].Title + '</div><div class="row-data">' + t.data[a].Results[e].SubResults[s].Count + '</div><div class="row-data">' + t.formatNumber(t.data[a].Results[e].SubResults[s].TotalRevenue) + '</div><div class="row-data">' + t.data[a].Results[e].SubResults[s].OrderPercentage + '</div><div class="row-data">' + t.data[a].Results[e].SubResults[s].MarginPercentage + "%</div></div>"; $(".graph" + a).addClass("sales-table").html(t.data[a].config.html).width(t.svgWidth) }, t.createSpeedTable = function (a, e) { t.hawkDebug && console.log("hawk.createSpeedTable @graphID=" + a), t.data[a].config.html = '<div class="row table-header"><div class="row-data"></div><div class="row-data">Normal</div><div class="row-data">Slow</div><div class="row-data">Very Slow</div></div>'; for (var s = 0; s < t.data[a].Results[e].SubResults.length; s++)t.data[a].config.html += '<div class="row"><div class="row-data">' + t.data[a].Results[e].SubResults[s].Label + '</div><div class="row-data"><div class="split-cell">' + t.data[a].Results[e].SubResults[s].NormalPercent + '%</div><div class="split-cell">' + t.formatNumber(t.data[a].Results[e].SubResults[s].NormalValue) + '</div></div><div class="row-data"><div class="split-cell">' + t.data[a].Results[e].SubResults[s].SlowPercent + '%</div><div class="split-cell">' + t.formatNumber(t.data[a].Results[e].SubResults[s].SlowValue) + '</div></div><div class="row-data"><div class="split-cell">' + t.data[a].Results[e].SubResults[s].VerySlowPercent + '%</div><div class="split-cell">' + t.formatNumber(t.data[a].Results[e].SubResults[s].VerySlowValue) + "</div></div></div>"; $(".graph" + a).addClass("speed-table").html(t.data[a].config.html).width(t.svgWidth) }, t.createStandardTable = function (a, e) { t.hawkDebug && console.log("hawk.createStandardTable @graphID=" + a), t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + "</div>", t.data[a].config.html += '<div class="row table-header">'; for (var s = 0; s < t.data[a].GraphHeaders.length; s++)t.data[a].config.html += '<div class="row-data" style="width:calc(' + 100 / t.data[a].GraphHeaders.length + '% - 11px);">' + t.data[a].GraphHeaders[s] + "</div>"; t.data[a].config.html += "</div>"; for (var l = 0; l < t.data[a].Results[e].SubResults.length; l++) { t.data[a].config.html += '<div class="row">'; var n = 0; for (var r in t.data[a].Results[e].SubResults[l])++n <= t.data[a].GraphHeaders.length && (t.data[a].config.html += '<div class="row-data" style="width:calc(' + 100 / t.data[a].GraphHeaders.length + '% - 11px);">' + t.data[a].Results[e].SubResults[l][r] + "</div>"); t.data[a].config.html += "</div>" } $(".graph" + a).addClass("standard-table").html(t.data[a].config.html).width(t.svgWidth) }, t.createHeatMap = function (a, e) { t.hawkDebug && console.log("hawk.createHeatMap @graphID=" + a), t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + "</div>", t.data[a].config.html += '<div class="row table-header"><div class="row-data">&nbsp;</div>'; for (var s = 0; s < t.data[a].GraphHeaders.length; s++)t.data[a].config.html += '<div class="row-data" style="width:' + (t.svgWidth - 114) / t.data[a].GraphHeaders.length + 'px">' + t.data[a].GraphHeaders[s] + "</div > "; t.data[a].config.html += "</div>"; for (var l = 0; l < t.data[a].Results[e].SubResults.length; l++) { for (var n in t.data[a].config.html += '<div class="row">', t.data[a].Results[e].SubResults[l]) t.data[a].config.html += '<div class="row-data', "Label" != n ? (parseInt(t.data[a].Results[e].SubResults[l][n]) < 20 ? t.data[a].config.html += " heatmap-cell-level1" : parseInt(t.data[a].Results[e].SubResults[l][n]) < 40 ? t.data[a].config.html += " heatmap-cell-level2" : parseInt(t.data[a].Results[e].SubResults[l][n]) < 60 ? t.data[a].config.html += " heatmap-cell-level3" : parseInt(t.data[a].Results[e].SubResults[l][n]) > 80 && (t.data[a].config.html += " heatmap-cell-level4"), t.data[a].config.html += '" style="width:' + (t.svgWidth - 114) / t.data[a].GraphHeaders.length + 'px">') : t.data[a].config.html += '">', t.data[a].config.html += t.data[a].Results[e].SubResults[l][n] + "</div>"; t.data[a].config.html += "</div>" } $(".graph" + a).addClass("heatmap-table").html(t.data[a].config.html).width(t.svgWidth) }, t.createMessageList = function (a, e) { t.hawkDebug && console.log("hawk.createMessageList @graphID=" + a), t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + "</div>"; for (var s = 0; s < t.data[a].Results[e].SubResults.length; s++)t.data[a].config.html += '<div class="msg">', null != t.data[a].Results[e].SubResults[s].Country && null != t.data[a].Results[e].SubResults[s].Country && "" != t.data[a].Results[e].SubResults[s].Country && (t.data[a].config.html += '<div class="msg-country"><div class="msg-label">Country</div><div class="msg-value">' + t.data[a].Results[e].SubResults[s].Country + "</div></div>"), null != t.data[a].Results[e].SubResults[s].Segment && null != t.data[a].Results[e].SubResults[s].Segment && "" != t.data[a].Results[e].SubResults[s].Segment && (t.data[a].config.html += '<div class="msg-segment"><div class="msg-label">Segment</div><div class="msg-value">' + t.data[a].Results[e].SubResults[s].Segment + "</div></div>"), t.data[a].config.html += '<div class="msg-visitors-impacted"><div class="msg-label">Visitors Impacted</div><div class="msg-value">' + t.data[a].Results[e].SubResults[s].VisitorsImpacted + '</div></div><div class="msg-total-errors"><div class="msg-label">Total Errors</div><div class="msg-value">' + t.data[a].Results[e].SubResults[s].TotalErrors + "</div></div>", null != t.data[a].Results[e].SubResults[s].Message && null != t.data[a].Results[e].SubResults[s].Message && "" != t.data[a].Results[e].SubResults[s].Message && (t.data[a].config.html += '<div class="msg-url">' + t.data[a].Results[e].SubResults[s].Message + "</div>"), t.data[a].config.html += "</div>"; $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth) }, t.createCommentMessages = function (a, e) { t.hawkDebug && console.log("hawk.createCommentMessages @graphID=" + a), t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + "</div>"; for (var s = 0; s < t.data[a].Results[e].SubResults.length; s++)t.data[a].config.html += '<div class="msg">', null != t.data[a].Results[e].SubResults[s].Segment && null != t.data[a].Results[e].SubResults[s].Segment && (t.data[a].config.html += '<div class="msg-segment"><div class="msg-label">Segment</div><div class="msg-value">', 1 === parseInt(t.data[a].Results[e].SubResults[s].Segment) ? t.data[a].config.html += "For Home" : t.data[a].config.html += "For Work", t.data[a].config.html += "</div></div>"), null != t.data[a].Results[e].SubResults[s].Rating && null != t.data[a].Results[e].SubResults[s].Rating && (t.data[a].config.html += '<div class="msg-rating"><div class="msg-value ', t.data[a].Results[e].SubResults[s].Rating > 6 ? t.data[a].config.html += "color-green" : t.data[a].Results[e].SubResults[s].Rating > 3 ? t.data[a].config.html += "color-yellow" : t.data[a].config.html += "color-red", t.data[a].config.html += '">' + t.data[a].Results[e].SubResults[s].Rating + '</div><div class="msg-label">Rating</div></div>'), null != t.data[a].Results[e].SubResults[s].Country && null != t.data[a].Results[e].SubResults[s].Country && (t.data[a].config.html += '<div class="msg-country"><div class="msg-label">Country</div><div class="msg-value">' + t.data[a].Results[e].SubResults[s].Country, t.data[a].config.html += "</div></div>"), null != t.data[a].Results[e].SubResults[s].Time && null != t.data[a].Results[e].SubResults[s].Time && "" != t.data[a].Results[e].SubResults[s].Time && (t.data[a].config.html += '<div class="msg-time"><div class="msg-value">', t.data[a].config.html += t.data[a].Results[e].SubResults[s].Time + '</div><div class="msg-label">Time</div></div>'), null != t.data[a].Results[e].SubResults[s].Message && null != t.data[a].Results[e].SubResults[s].Message && "" != t.data[a].Results[e].SubResults[s].Message && (t.data[a].config.html += '<div class="msg-url">' + t.data[a].Results[e].SubResults[s].Message + "</div>"), t.data[a].config.html += "</div>"; $(".graph" + a).addClass("comment-messages").html(t.data[a].config.html).width(t.svgWidth) }, t.graphHoverInfo = function (a, e) { t.hawkDebug && console.log("hawk.graphHoverInfo @graphID=" + a) }, t.createLineGraph = function (a, e, s = -1) { if (t.hawkDebug && console.log("hawk.createLineGraph @graphID=" + a), -1 == s) { t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + '</div><svg class="graph"></svg><div class="graph-legend"></div>', $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth); s = d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.svgHeight).append("g").attr("transform", "translate(" + t.graphMargins.left + "," + t.graphMargins.top + ")"); $(".graph" + a).width(t.svgWidth) } if (t.data[a].config.y1 = d3.scaleLinear().range([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Value) })]), t.data[a].config.xLine = d3.scaleTime().rangeRound([0, t.data[a].config.graphWidth]).domain(d3.extent(t.data[a].Results[e].SubResults, function (a) { return d3.isoParse(a.Timestamp) })), 3 == t.data[a].GraphType && (t.createLegend(a, e), t.createAxis(a, e, s)), t.data[a].config.dellLines = 1, t.data[a].config.yLine = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[0].SubResults, function (a) { return parseInt(a.Line1Value) })]), t.data[a].config.line = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine(parseInt(e.Line1Value)) }).curve(d3.curveMonotoneX), s.append("path").attr("class", "line").style("stroke", function () { return t.colors[0] }).style("overflow", "visible").attr("d", t.data[a].config.line(t.data[a].Results[0].SubResults)), null != t.data[a].Results[0].SubResults[0].Line2Value && null != t.data[a].Results[0].SubResults[0].Line2Value && (t.data[a].config.dellLines++ , t.data[a].config.yLine2 = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line2Value) })]), t.data[a].config.line2 = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine2(parseInt(e.Line2Value)) }).curve(d3.curveMonotoneX), s.append("path").attr("class", "line").style("stroke", function () { return t.colors[1] }).attr("d", t.data[a].config.line2(t.data[a].Results[e].SubResults))), null != t.data[a].Results[0].SubResults[0].Line3Value && null != t.data[a].Results[0].SubResults[0].Line3Value && (t.data[a].config.dellLines++ , t.data[a].config.yLine3 = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line3Value) })]), t.data[a].config.line3 = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine3(parseInt(e.Line3Value)) }).curve(d3.curveMonotoneX), s.append("path").attr("class", "line").style("stroke", function () { return t.colors[2] }).attr("d", t.data[a].config.line3(t.data[a].Results[e].SubResults))), null != t.data[a].Results[0].SubResults[0].Line4Value && null != t.data[a].Results[0].SubResults[0].Line4Value && (t.data[a].config.dellLines++ , t.data[a].config.yLine4 = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line4Value) })]), t.data[a].config.line4 = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine4(parseInt(e.Line4Value)) }).curve(d3.curveMonotoneX), s.append("path").attr("class", "line").style("stroke", function () { return t.colors[3] }).attr("d", t.data[a].config.line4(t.data[a].Results[e].SubResults))), 2 === parseInt(t.data[a].Interactive) && 1 !== t.data[a].GraphType) { var l = s.append("g").attr("class", "mouse-over-effects"); l.append("path").attr("class", "mouse-line").style("stroke", "black").style("stroke-width", "1px").style("opacity", "0"), t.data[a].config.lines = document.querySelectorAll(".graph" + a + " .line"); var n = l.selectAll(".graph" + a + " .mouse-per-line").data(t.data[a].Results[0].SubResults).enter().append("g").attr("class", "mouse-per-line"); n.append("circle").attr("r", 7).style("stroke", function (a) { return t.colors[0] }).style("fill", "none").style("stroke-width", "1px").style("opacity", "0"), n.append("text").attr("transform", "translate(10,3)"); var r = function () { d3.select(".graph" + a + " .mouse-line").style("opacity", "1"), d3.selectAll(".graph" + a + " .mouse-per-line circle").style("opacity", "1"), d3.selectAll(".graph" + a + " .mouse-per-line text").style("opacity", "1").style("background", "#fff") }; l.append("svg:rect").attr("width", t.data[a].config.graphWidth).attr("height", t.data[a].config.graphHeight).attr("fill", "none").attr("pointer-events", "all").on("mouseout", function () { d3.select(".graph" + a + " .mouse-line").style("opacity", "0"), d3.selectAll(".graph" + a + " .mouse-per-line circle").style("opacity", "0"), d3.selectAll(".graph" + a + " .mouse-per-line text").style("opacity", "0") }).on("mouseover", r).on("touchmove", r).on("mousemove", function () { var e = d3.mouse(this); d3.select(".graph" + a + " .mouse-line").attr("d", function () { var s = "M" + e[0] + "," + t.data[a].config.graphHeight; return s += " " + e[0] + ",0" }), d3.selectAll(".graph" + a + " .mouse-per-line").attr("transform", function (s, l) { if (l < t.data[a].config.dellLines) { for (var n = t.data[a].config.xLine.invert(e[0]), r = ((0, d3.bisector(function (a) { return a.Timestamp }).right)(s.Line1Value, n), 0), i = t.data[a].config.lines[l].getTotalLength(), u = null; u = Math.floor((r + i) / 2), pos = t.data[a].config.lines[l].getPointAtLength(u), u !== i && u !== r || pos.x === e[0];)if (pos.x > e[0]) i = u; else { if (!(pos.x < e[0])) break; r = u } return d3.select(this).select("text").attr("class", "dell-tooltip").text(t.data[a].config.yLine.invert(pos.y).toFixed(2)), "translate(" + e[0] + "," + pos.y + ")" } }) }) } }, t.createMultiColorLineGraph = function (a, e) { t.hawkDebug && console.log("hawk.createMultiColorLineGraph @graphID=" + a + " @GraphType=" + t.data[a].GraphType), t.data[a].config.html = '<div class="graph-title">' + t.data[a].GraphTitle + '</div><svg class="graph"></svg><div class="graph-details"></div><div class="graph-legend"></div>', $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth); var s = d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.svgHeight).append("g").attr("transform", "translate(" + t.graphMargins.left + "," + t.graphMargins.top + ")"); t.data[a].config.min = 10 * Math.round(d3.min(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Percentage) }) / 10) - 10, t.data[a].config.min < 0 && (t.data[a].config.min = 0), t.data[a].config.xLine = d3.scaleTime().rangeRound([0, t.data[a].config.graphWidth]).domain(d3.extent(t.data[a].Results[e].SubResults, function (a) { return d3.isoParse(a.Timestamp) })), t.data[a].config.yLine = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([t.data[a].config.min, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Percentage) })]), t.createLegend(a, e), t.createAxis(a, e, s), t.data[a].config.line = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine(parseInt(e.Line1Percentage)) }).curve(d3.curveMonotoneX), s.append("linearGradient").attr("id", "line-gradient" + a).attr("gradientUnits", "userSpaceOnUse").attr("x1", 0).attr("y1", t.data[a].config.yLine(0)).attr("x2", 0).attr("y2", t.data[a].config.yLine(100)).selectAll("stop").data(t.data[a].GraphColorRanges).enter().append("stop").attr("offset", function (a) { return a.Offset }).attr("stop-color", function (a) { return a.Color }), s.append("path").attr("class", "colorful-line" + a).attr("fill", "none").attr("stroke", "url(#line-gradient" + a + ")").attr("stroke-width", "2px").attr("d", t.data[a].config.line(t.data[a].Results[e].SubResults)), t.detailedInfo(a) }, t.createOverviewLineItem = function (a, e) { t.hawkDebug && console.log("hawk.createMultiColorLineGraph @graphID=" + a), t.data[a].config.html = '<div class="graph-title-gt14">' + t.data[a].GraphTitle + '</div><svg class="graph"></svg><div class="graph-number-gt14" style="color:' + t.data[a].Color + '">' + t.data[a].GraphNumber + "</div>", $(".graph" + a).addClass("gt14").html(t.data[a].config.html).width(t.svgWidth), t.data[a].config.graphHeight = 40, t.data[a].config.graphWidth = t.svgWidth - 90; var s = d3.select(".graph" + a + " .graph").attr("width", t.data[a].config.graphWidth).attr("height", t.data[a].config.graphHeight).append("g").attr("transform", "translate(0,0)"); t.data[a].config.min = 10 * Math.round(d3.min(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Value) }) / 10) - 10, t.data[a].config.min < 0 && (t.data[a].config.min = 0), t.data[a].config.xLine = d3.scaleTime().rangeRound([0, t.data[a].config.graphWidth]).domain(d3.extent(t.data[a].Results[e].SubResults, function (a) { return d3.isoParse(a.Timestamp) })), t.data[a].config.yLine = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([t.data[a].config.min, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Value) })]), t.data[a].config.line = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine(parseInt(e.Line1Value)) }).curve(d3.curveMonotoneX), s.append("linearGradient").attr("id", "line-gradient" + a).attr("gradientUnits", "userSpaceOnUse").attr("x1", 0).attr("y1", t.data[a].config.yLine(0)).attr("x2", 0).attr("y2", t.data[a].config.yLine(100)).selectAll("stop").data(t.data[a].GraphColorRanges).enter().append("stop").attr("offset", function (a) { return a.Offset }).attr("stop-color", function (a) { return a.Color }), s.append("path").attr("class", "colorful-line" + a).attr("fill", "none").attr("stroke", "url(#line-gradient" + a + ")").attr("stroke-width", "2px").attr("d", t.data[a].config.line(t.data[a].Results[e].SubResults)) }, t.createGridlines = function (a, e) { t.data[a].config.make_x_gridlines = function () { return d3.axisBottom(t.data[a].config.x).ticks(5) }, e.append("g").attr("class", "grid").attr("transform", "translate(0," + t.data[a].config.graphHeight + ")").call(t.data[a].config.make_x_gridlines().tickSize(-t.data[a].config.graphHeight).tickFormat("")), t.data[a].config.make_y_gridlines = function () { return d3.axisLeft(t.data[a].config.y1).ticks(5) }, e.append("g").attr("class", "grid").call(t.data[a].config.make_y_gridlines().tickSize(-t.data[a].config.graphWidth).tickFormat("")) }, t.createAxis = function (a, e, s) { t.hawkDebug && console.log("hawk.createAxis @graphID=" + a), t.data[a].config.x = d3.scaleTime().range([0, t.data[a].config.graphWidth]).domain([t.data[a].config.startTime, t.data[a].config.endTime]), s.append("g").attr("class", "axis").attr("transform", "translate(0," + t.data[a].config.graphHeight + ")").call(d3.axisBottom(t.data[a].config.x).ticks(5)), 1 === t.data[a].GraphType || 2 === t.data[a].GraphType || 3 === t.data[a].GraphType ? s.append("g").attr("class", "axis").call(d3.axisLeft(t.data[a].config.y1).ticks(4).tickFormat(function (a) { return t.formatNumber(a) })).append("text").attr("transform", "rotate(-90)").attr("x", -1 * t.data[a].config.graphHeight).attr("y", -40).attr("dy", "0.71em").attr("text-anchor", "end").text(t.data[a].GraphY1AxisLabel) : 7 === t.data[a].GraphType ? s.append("g").attr("class", "axis").call(d3.axisLeft(t.data[a].config.y1).ticks(4).tickFormat(function (a) { return t.formatNumber(a) })) : 13 === t.data[a].GraphType && (t.data[a].config.y1 = d3.scaleLinear().range([t.data[a].config.graphHeight, 0]).domain([t.data[a].config.min, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Value) })])), t.data[a].config.y2 = d3.scaleLinear().range([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Value) })]), 1 === t.data[a].GraphType && s.append("g").attr("class", "axis").attr("transform", "translate(" + t.data[a].config.graphWidth + ",0)").call(d3.axisRight(t.data[a].config.y2).ticks(3)).append("text").attr("transform", "rotate(90)").attr("x", t.data[a].config.graphHeight + 15).attr("y", -40).attr("dy", "0.71em").attr("text-anchor", "end").text(t.data[a].GraphY2AxisLabel), t.createGridlines(a, s) }, t.createBarGraph = function (a, e) { if (t.hawkDebug && console.log("hawk.createBarGraph @graphID=" + a), "" == t.data[a].GraphColor) { t.data[a].GraphColor = t.colors[4]; var s = t.colors[9] } else s = t.data[a].GraphColor; t.data[a].config.html = '<div class="graph-title graph-title-short">' + t.data[a].GraphTitle + '</div><div class="graph-status"><div class="graph-status-value" style="color:' + s + '">' + t.data[a].GraphNumber + '</div><div class="graph-status-label">Customers Impacted</div></div><svg class="graph"></svg><div class="graph-legend"></div>', $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth); var l = d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.svgHeight).append("g").attr("transform", "translate(" + t.graphMargins.left + "," + t.graphMargins.top + ")"); $(".graph" + a).width(t.svgWidth), t.data[a].config.xScale = d3.scaleBand().rangeRound([0, t.data[a].config.graphWidth]).padding(.1).domain(t.data[a].Results[e].SubResults.map(function (a) { return d3.isoParse(a.Timestamp) })), t.data[a].config.yScale = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.BarGraphValue) })]), t.createLegend(a, e), t.createAxis(a, e, l), l.selectAll(".bar").data(t.data[a].Results[e].SubResults).enter().append("rect").attr("class", "bar").attr("width", t.data[a].config.xScale.bandwidth()).style("fill", t.data[a].GraphColor).attr("x", function (e) { return t.data[a].config.xScale(d3.isoParse(e.Timestamp)) }).attr("y", t.data[a].config.graphHeight).attr("height", 0).transition().delay(function (a, t) { return 50 * t }).attr("x", function (e) { return t.data[a].config.xScale(d3.isoParse(e.Timestamp)) }).attr("y", function (e) { return t.data[a].config.yScale(parseInt(e.BarGraphValue)) }).attr("height", function (e) { return t.data[a].config.graphHeight - t.data[a].config.yScale(parseInt(e.BarGraphValue)) }), t.graphLinkOut(a) }, t.createGraphType7 = function (a, e) { t.hawkDebug && console.log("hawk.createBarGraph @graphID=" + a), t.data[a].config.html = '<div class="graph-title"><div class="graph-title">' + t.data[a].GraphTitle + '</div></div><svg class="graph"></svg><div class="graph-legend"></div>', $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth), graph = d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.svgHeight).append("g").attr("transform", "translate(" + t.graphMargins.left + "," + t.graphMargins.top + ")"), t.data[a].config.xScale = d3.scaleBand().rangeRound([0, t.data[a].config.graphWidth]).padding(.1).domain(t.data[a].Results[e].SubResults.map(function (a) { return d3.isoParse(a.Timestamp) })), t.data[a].config.yScale = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.BarGraphValue) })]), t.data[a].config.xLine = d3.scaleTime().rangeRound([0, t.data[a].config.graphWidth]).domain(d3.extent(t.data[a].Results[e].SubResults, function (a) { return d3.isoParse(a.Timestamp) })), t.data[a].config.yLine = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.Line1Value) })]), t.data[a].config.x = d3.scaleTime().range([0, t.data[a].config.graphWidth]).domain([t.data[a].config.startTime, t.data[a].config.endTime]), t.data[a].config.y1 = d3.scaleLinear().range([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.BarGraphValue) })]), t.createAxis(a, e, graph), t.createLegend(a, e), graph.selectAll(".bar").data(t.data[a].Results[e].SubResults).enter().append("rect").attr("class", "bar").attr("width", t.data[a].config.xScale.bandwidth()).style("fill", "#41B6E6").attr("x", function (e) { return t.data[a].config.xScale(d3.isoParse(e.Timestamp)) }).attr("y", t.data[a].config.graphHeight).attr("height", 0).transition().delay(function (a, t) { return 50 * t }).attr("x", function (e) { return t.data[a].config.xScale(d3.isoParse(e.Timestamp)) }).attr("y", function (e) { return t.data[a].config.yScale(parseInt(e.BarGraphValue)) }).attr("height", function (e) { return t.data[a].config.graphHeight - t.data[a].config.yScale(parseInt(e.BarGraphValue)) }), t.data[a].config.preline = d3.line().x(function () { return t.data[a].config.xLine(t.data[a].config.startTime) }).y(function () { return t.data[a].config.yLine(0) }), t.data[a].config.line = d3.line().x(function (e) { return t.data[a].config.xLine(d3.isoParse(e.Timestamp)) }).y(function (e) { return t.data[a].config.yLine(parseInt(e.Line1Value)) }).curve(d3.curveMonotoneX), graph.append("path").attr("class", "line").attr("d", t.data[a].config.preline(t.data[a].Results[e].SubResults)).transition().attr("d", t.data[a].config.line(t.data[a].Results[e].SubResults)), t.graphLinkOut(a) }, t.createStackedBarGraph = function (a, e) { var s; t.hawkDebug && console.log("hawk.createStackedBarGraph @graphID=" + a + " @svgwidth=" + t.svgWidth), t.data[a].config.date = new Date(t.data[a].Results[e].SubResults[0].Timestamp).toDateString(), t.data[a].config.html = '<div class="graph-title graph-title-large">' + t.data[a].GraphTitle + '</div><div class="graph-status"><div class="graph-status-value"></div><div class="graph-status-label"></div></div><svg class="graph"></svg><div class="graph-details"></div><div class="graph-legend"></div>', $(".graph" + a).html(t.data[a].config.html).width(t.svgWidth), $(".graph" + a + " .graph-status-value").html(t.data[a].GraphNumber), $(".graph" + a + " .graph-status-label").html(t.data[a].GraphNumberLabel), s = d3.select(".graph" + a + " .graph").attr("width", t.svgWidth).attr("height", t.svgHeight).append("g").attr("transform", "translate(" + t.graphMargins.left + "," + t.graphMargins.top + ")"), t.data[a].config.keys = ["StackedBar1Value", "StackedBar2Value", "StackedBar3Value", "StackedBar4Value"], t.data[a].config.layers = d3.stack().keys(t.data[a].config.keys)(t.data[a].Results[e].SubResults), t.data[a].config.xScale = d3.scaleBand().rangeRound([0, t.data[a].config.graphWidth]).padding(.1).domain(t.data[a].Results[e].SubResults.map(function (a) { return d3.isoParse(a.Timestamp) })), t.data[a].config.yScale = d3.scaleLinear().rangeRound([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].config.layers[t.data[a].config.layers.length - 1], function (a) { return parseInt(a[0]) + parseInt(a[1]) })]).nice(), t.data[a].config.zScale = d3.scaleOrdinal().range(["#D93F3C", "#F7BC38", "#0076CE", "#65A637"]).domain(t.data[a].config.keys), t.data[a].config.y1 = d3.scaleLinear().range([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.StackedBarTotal) })]), t.createLegend(a, e), t.createAxis(a, e, s), s.selectAll("layer").data(t.data[a].config.layers).enter().append("g").attr("class", "layer").style("fill", function (e, s) { return t.data[a].config.zScale(s) }).selectAll("rect").data(a => a).enter().append("rect").attr("width", t.data[a].config.xScale.bandwidth()).attr("x", function (e) { return t.data[a].config.xScale(d3.isoParse(e.data.Timestamp)) }).attr("y", t.data[a].config.graphHeight).attr("height", 0).transition().delay(function (a, t) { return 30 * t }).attr("x", function (e, s) { return t.data[a].config.xScale(d3.isoParse(e.data.Timestamp)) }).attr("y", function (e) { return t.data[a].config.yScale(parseInt(e[0]) + parseInt(e[1])) }).attr("height", function (e) { return t.data[a].config.yScale(parseInt(e[0])) - t.data[a].config.yScale(parseInt(e[1]) + parseInt(e[0])) }), t.detailedInfo(a), t.createLineGraph(a, e, s) }, t.detailedInfo = function (a) { t.hawkDebug && console.log("hawk.detailedInfo @SETUP @graphID=" + a + " @GraphType=" + t.data[a].GraphType); var e = "", s = "", l = t.data[a].Results[0].SubResults.length; $(".graph" + a + " .button-graph-details-expand").click(function () { t.hawkDebug && console.log("hawk.detailedInfo @clickedInfoButton @graphID=" + a), $(".graph" + a + " .graph-details").html('<div class="graph-details-slider"></div><div class="graph-details-result"></div>'), $(".graph" + a + " .graph-details-slider").width(t.data[a].config.graphWidth).slider({ change: function (n, r) { t.hawkDebug && console.log("hawk.detailedInfo @DEBUG @graphID=" + a + " @GraphType=" + t.data[a].GraphType); var i = $(".graph-details-slider").slider("option", "value"), u = l / 100, d = Math.floor(i * u) - 1; if (d < 0 && (d = 0), s = '<div class="graph-details-result-date">' + t.data[a].Results[0].SubResults[d].Timestamp + "</div>", $(".graph" + a + " .graph-details-result").html(s), 13 === t.data[a].GraphType) { t.hawkDebug && console.log("hawk.detailedInfo @showData @graphID=" + a + " @GraphType=" + t.data[a].GraphType), e = '<div class="graph-legend-element"><div class="graph-legend-element-label">Value</div><div class="data-point-info">' + t.data[a].Results[0].SubResults[d].Line1Value + "</div></div>"; for (var o = 0; o < t.data[a].GraphLegend.length; o++)e += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-line" style="background:' + t.data[a].colors[o] + '"></div><div class="graph-legend-element-label">' + t.data[a].GraphLegend[o] + "</div></div>" } else 1 === t.data[a].GraphType && (t.hawkDebug && console.log("hawk.detailedInfo @showData @graphID=" + a + " @GraphType=" + t.data[a].GraphType), e = '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-line"></div><div class="graph-legend-element-label">perc 95</div><div class="data-point-info">' + t.data[a].Results[0].SubResults[d].Line1Value + '</div></div><div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-5xx"></div><div class="graph-legend-element-label">5XX</div><div class="data-point-info">' + t.data[a].Results[0].SubResults[d].StackedBar1Value + '</div></div><div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-4xx"></div><div class="graph-legend-element-label">4XX</div><div class="data-point-info">' + t.data[a].Results[0].SubResults[d].StackedBar2Value + "</div></div>", t.get3xxCount(a) > 0 && (e += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-3xx"></div><div class="graph-legend-element-label">3XX</div><div class="data-point-info">' + t.data[a].Results[0].SubResults[d].StackedBar3Value + "</div></div>"), e += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-2xx"></div><div class="graph-legend-element-label">2XX</div><div class="data-point-info">' + t.data[a].Results[0].SubResults[d].StackedBar4Value + "</div></div>"); $(".graph" + a + " .graph-legend").html(e) } }), $(".graph" + a + " .graph-details-slider").slider("value", 0) }) }, t.createLegend = function (a, e = 0, s) { t.hawkDebug && console.log("hawk.createLegend @graphID=" + a); var l = ""; if (1 === t.data[a].GraphType) 1 === parseInt(t.data[a].Interactive) && (l += '<img alt="binoculars expand graph details" class="button-graph-details-expand" src="./binoculars.svg" /></div>'), l += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-line"></div><div class="graph-legend-element-label">perc 95</div></div><div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-5xx"></div><div class="graph-legend-element-label">5XX</div></div><div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-4xx"></div><div class="graph-legend-element-label">4XX</div></div>', t.get3xxCount(a) > 0 && (l += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-3xx"></div><div class="graph-legend-element-label">3XX</div></div>'), l += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-2xx"></div><div class="graph-legend-element-label">2XX</div></div>'; else if (2 === t.data[a].GraphType) l = '<div class="graph-legend-element"><div class="graph-legend-element-color" style="background:' + t.data[a].GraphColor + '"></div><div class="graph-legend-element-label">Errors</div></div>'; else if (3 === t.data[a].GraphType) for (var n = 0; n < t.data[a].GraphLegend.length; n++)l += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-line" style="background:' + t.colors[n] + '"></div><div class="graph-legend-element-label">' + t.data[a].GraphLegend[n] + "</div></div>"; else if (4 === t.data[a].GraphType) { null != s && "" !== s || (s = t.colors); for (n = 0; n < t.data[a].Results[e].SubResults.length; n++)l += '<div class="graph-legend-element"><div class="graph-legend-element-color" style="background:' + s[n] + '"></div> <div class="graph-legend-element-label-count" style="color:' + s[n] + '">' + t.data[a].Results[e].SubResults[n].Value + '</div> <div class="graph-legend-element-label">' + t.data[a].Results[e].SubResults[n].Label + "</div></div> " } else if (7 === t.data[a].GraphType) l = '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-line"></div><div class="graph-legend-element-label">Average</div></div><div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-color-totals"></div><div class="graph-legend-element-label">Total</div></div>'; else if (13 === t.data[a].GraphType) { 1 === parseInt(t.data[a].Interactive) && (l += '<img alt="binoculars expand graph details" class="button-graph-details-expand" src="./binoculars.svg" /></div>'), t.data[a].colors = []; for (n = 0; n < t.data[a].GraphColorRanges.length; n++)n % 2 == 0 && t.data[a].colors.push(t.data[a].GraphColorRanges[n].Color); console.log("colors", t.data[a].colors); for (n = 0; n < t.data[a].GraphLegend.length; n++)l += '<div class="graph-legend-element"><div class="graph-legend-element-color graph-legend-element-line" style="background:' + t.data[a].colors[n] + '"></div><div class="graph-legend-element-label">' + t.data[a].GraphLegend[n] + "</div></div>" } $(".graph" + a + " .graph-legend").html(l) }, t.graphLinkOut = function (a) { null != t.data[a].GraphLink && null != t.data[a].GraphLink && "" != t.data[a].GraphLink && $(".graph" + a).off("click").click(function () { window.location = t.data[a].GraphLink }) }, t.redrawGraph = function (a) { var e = t.filterDataForGraph(a), s = ""; switch (t.data[a].GraphType) { case 1: -1 === e ? s = "Stacked Bar Graph" : t.createStackedBarGraph(a, e); break; case 2: -1 === e ? s = "Bar Graph" : (t.data[a].config.y1 = d3.scaleLinear().range([t.data[a].config.graphHeight, 0]).domain([0, d3.max(t.data[a].Results[e].SubResults, function (a) { return parseInt(a.BarGraphValue) })]), t.createBarGraph(a, e)); break; case 3: -1 === e ? s = "Line Graph" : t.createLineGraph(a, e); break; case 4: -1 === e ? s = "Pie Graph" : (t.createPieGraph(a, e), t.thresholdsMsg = 2); break; case 5: -1 === e ? s = "Funnel Graph" : (t.createFunnelGraph(a, e), t.thresholdsMsg = 2); break; case 6: -1 === e ? s = "Sales Data Table" : t.createSalesTable(a, e); break; case 7: -1 === e ? s = "Bar & Line Graph" : t.createGraphType7(a, e); break; case 9: -1 === e ? s = "Heat Map" : t.createHeatMap(a, e); break; case 10: -1 === e ? s = "Error Message List" : t.createMessageList(a, e); break; case 11: -1 === e ? s = "Speed Data Table" : t.createSpeedTable(a, e); break; case 12: -1 === e ? s = "Standard Data Table" : t.createStandardTable(a, e); break; case 13: -1 === e ? s = "Multi Color Line Graph" : t.createMultiColorLineGraph(a, e); break; case 14: -1 === e ? s = "Overview Line Item" : t.createOverviewLineItem(a, e); break; case 15: -1 === e ? s = "Comment Messages" : t.createCommentMessages(a, e) }-1 === e && $(".graph" + a).html(s + ". No data for current filter selection.") }, t.createGraph = function (a) { -1 === t.existingGraphTypes.indexOf(t.data[a].GraphType) && t.existingGraphTypes.push(t.data[a].GraphType), t.data[a].config = {}, t.data[a].config.graphWidth = t.svgWidth - t.graphMargins.left - t.graphMargins.right, t.data[a].config.graphHeight = t.svgHeight - t.graphMargins.top - t.graphMargins.bottom, null == t.data[a].Results[0].SubResults[0].Timestamp && null == t.data[a].Results[0].SubResults[0].Timestamp || (t.data[a].config.startTime = d3.isoParse(t.data[a].Results[0].SubResults[0].Timestamp), t.data[a].config.endTime = d3.isoParse(t.data[a].Results[0].SubResults[t.data[a].Results[0].SubResults.length - 1].Timestamp)), t.redrawGraph(a) }, t.validateGraphData = function (a) { var e = !0, s = "Error: Invalid Data."; if (null == t.data[a].GraphType || null == t.data[a].GraphType || isNaN(parseInt(t.data[a].GraphType))) e = !1, s += " No graph type set."; else if (null != t.data[a].Results && null != t.data[a].Results && Array.isArray(t.data[a].Results) && 0 !== t.data[a].Results.length) switch (t.data[a].GraphType = parseInt(t.data[a].GraphType), t.data[a].GraphType) { case 1: s += " Stacked Bar + Line Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."), null != t.data[a].GraphY1AxisLabel && null != t.data[a].GraphY1AxisLabel || (e = !1, s += " No GraphY1AxisLabel set."), null != t.data[a].GraphY2AxisLabel && null != t.data[a].GraphY2AxisLabel || (e = !1, s += " No GraphY2AxisLabel set."), null != t.data[a].GraphNumber && null != t.data[a].GraphNumber || (e = !1, s += " No GraphNumber set."), null != t.data[a].GraphNumberLabel && null != t.data[a].GraphNumberLabel || (e = !1, s += " No GraphNumberLabel set."); for (var l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (var n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Timestamp && null != t.data[a].Results[l].SubResults[n].Timestamp || (e = !1, s += " Missing Timestamp in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Line1Value && null != t.data[a].Results[l].SubResults[n].Line1Value || (e = !1, s += " Missing Line1Value in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].StackedBar1Value && null != t.data[a].Results[l].SubResults[n].StackedBar1Value || (e = !1, s += " Missing StackedBar1Value in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].StackedBar2Value && null != t.data[a].Results[l].SubResults[n].StackedBar2Value || (e = !1, s += " Missing StackedBar2Value in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].StackedBar3Value && null != t.data[a].Results[l].SubResults[n].StackedBar3Value || (e = !1, s += " Missing StackedBar3Value in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 2: s += " Bar Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."), null != t.data[a].GraphY1AxisLabel && null != t.data[a].GraphY1AxisLabel || (e = !1, s += " No GraphY1AxisLabel set."), null != t.data[a].GraphNumber && null != t.data[a].GraphNumber || (e = !1, s += " No GraphNumber set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Timestamp && null != t.data[a].Results[l].SubResults[n].Timestamp || (e = !1, s += " Missing Timestamp in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].BarGraphValue && null != t.data[a].Results[l].SubResults[n].BarGraphValue || (e = !1, s += " Missing BarGraphValue in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 3: s += " Line Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Timestamp && null != t.data[a].Results[l].SubResults[n].Timestamp || (e = !1, s += " Missing Timestamp in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Line1Value && null != t.data[a].Results[l].SubResults[n].Line1Value || (e = !1, s += " Missing Line1Value in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 4: s += " Pie Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Label && null != t.data[a].Results[l].SubResults[n].Label || (e = !1, s += " Missing Label in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Value && null != t.data[a].Results[l].SubResults[n].Value || (e = !1, s += " Missing Value in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 5: s += " Funnel Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Label && null != t.data[a].Results[l].SubResults[n].Label || (e = !1, s += " Missing Label in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Value && null != t.data[a].Results[l].SubResults[n].Value || (e = !1, s += " Missing Value in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Percent && null != t.data[a].Results[l].SubResults[n].Percent || (e = !1, s += " Missing Percent in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].SubPercent && null != t.data[a].Results[l].SubResults[n].SubPercent || (e = !1, s += " Missing SubPercent in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 6: s += " Sales Data Table.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Title && null != t.data[a].Results[l].SubResults[n].Title || (e = !1, s += " Missing Title in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Count && null != t.data[a].Results[l].SubResults[n].Count || (e = !1, s += " Missing Count in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].TotalRevenue && null != t.data[a].Results[l].SubResults[n].TotalRevenue || (e = !1, s += " Missing TotalRevenue in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].OrderPercentage && null != t.data[a].Results[l].SubResults[n].OrderPercentage || (e = !1, s += " Missing OrderPercentage in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].MarginPercentage && null != t.data[a].Results[l].SubResults[n].MarginPercentage || (e = !1, s += " Missing MarginPercentage in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Currency && null != t.data[a].Results[l].SubResults[n].Currency || (e = !1, s += " Missing Currency in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 7: s += " Bar + Line Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Timestamp && null != t.data[a].Results[l].SubResults[n].Timestamp || (e = !1, s += " Missing Timestamp in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Line1Value && null != t.data[a].Results[l].SubResults[n].Line1Value || (e = !1, s += " Missing Line1Value in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].BarGraphValue && null != t.data[a].Results[l].SubResults[n].BarGraphValue || (e = !1, s += " Missing BarGraphValue in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 9: s += " Heat Map.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."), null != t.data[a].GraphHeaders && null != t.data[a].GraphHeaders && Array.isArray(t.data[a].GraphHeaders) && 0 !== t.data[a].GraphHeaders.length || (e = !1, s += " No GraphHeaders set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Label && null != t.data[a].Results[l].SubResults[n].Label || (e = !1, s += " Missing Label in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Value1 && null != t.data[a].Results[l].SubResults[n].Value1 || (e = !1, s += " Missing Value1 in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 10: s += " Error Messages List.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].TotalErrors && null != t.data[a].Results[l].SubResults[n].TotalErrors || (e = !1, s += " Missing TotalErrors in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].VisitorsImpacted && null != t.data[a].Results[l].SubResults[n].VisitorsImpacted || (e = !1, s += " Missing VisitorsImpacted in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Message && null != t.data[a].Results[l].SubResults[n].Message || (e = !1, s += " Missing Message in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 11: s += " Speed Data Table."; for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Label && null != t.data[a].Results[l].SubResults[n].Label || (e = !1, s += " Missing label in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].NormalPercent && null != t.data[a].Results[l].SubResults[n].NormalPercent || (e = !1, s += " Missing normal percent in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].NormalValue && null != t.data[a].Results[l].SubResults[n].NormalValue || (e = !1, s += " Missing NormalValue in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].SlowPercent && null != t.data[a].Results[l].SubResults[n].SlowPercent || (e = !1, s += " Missing SlowPercent in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].SlowValue && null != t.data[a].Results[l].SubResults[n].SlowValue || (e = !1, s += " Missing SlowValue in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].VerySlowPercent && null != t.data[a].Results[l].SubResults[n].VerySlowPercent || (e = !1, s += " Missing VerySlowPercent in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].VerySlowValue && null != t.data[a].Results[l].SubResults[n].VerySlowValue || (e = !1, s += " Missing VerySlowValue in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 12: s += " Standard Data Table.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."), null != t.data[a].GraphHeaders && null != t.data[a].GraphHeaders && Array.isArray(t.data[a].GraphHeaders) && 0 !== t.data[a].GraphHeaders.length || (e = !1, s += " No GraphHeaders set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Value1 && null != t.data[a].Results[l].SubResults[n].Value1 || (e = !1, s += " Missing Value in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 13: s += " Multi Color Line Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Timestamp && null != t.data[a].Results[l].SubResults[n].Timestamp || (e = !1, s += " Missing Timestamp in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Line1Value && null != t.data[a].Results[l].SubResults[n].Line1Value || (e = !1, s += " Missing Line1Value in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 14: s += " Multi Color Line Graph.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."), null != t.data[a].GraphNumber && null != t.data[a].GraphNumber || (e = !1, s += " No GraphNumber set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Timestamp && null != t.data[a].Results[l].SubResults[n].Timestamp || (e = !1, s += " Missing Timestamp in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Line1Value && null != t.data[a].Results[l].SubResults[n].Line1Value || (e = !1, s += " Missing Line1Value in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; case 15: s += " Comment Messages.", null != t.data[a].GraphTitle && null != t.data[a].GraphTitle || (e = !1, s += " No graph title set."); for (l = 0; l < t.data[a].Results.length; l++)if (null != t.data[a].Results[l].SubResults && null != t.data[a].Results[l].SubResults && Array.isArray(t.data[a].Results[l].SubResults) && 0 !== t.data[a].Results[l].SubResults.length) for (n = 0; n < t.data[a].Results[l].SubResults.length; n++)null != t.data[a].Results[l].SubResults[n].Rating && null != t.data[a].Results[l].SubResults[n].Rating || (e = !1, s += " Missing Rating in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Segment && null != t.data[a].Results[l].SubResults[n].Segment || (e = !1, s += " Missing Segment in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Message && null != t.data[a].Results[l].SubResults[n].Message || (e = !1, s += " Missing Message in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Time && null != t.data[a].Results[l].SubResults[n].Time || (e = !1, s += " Missing Time in subresults " + n + "."), null != t.data[a].Results[l].SubResults[n].Country && null != t.data[a].Results[l].SubResults[n].Country || (e = !1, s += " Missing Country in subresults " + n + "."); else e = !1, s += " Missing subresults in dataset."; break; default: e = !1, s += " Invalid Graph Type." } else e = !1, s += " No results in dataset."; return e || (t.hawkDebug ? $(".graph" + a).html(s) : $(".graph" + a).html("No Data")), e }, t.createGraphContainer = function (a) { var t = '<div class="graph-container graph' + a + '"></div>'; $(".graphs").append(t) }, t.globalConfig = function () { t.existingGraphTypes = [], t.graphMargins = { top: 10, left: 45, right: 45, bottom: 30 }, t.thresholdsMsg = 1, t.thresholdsMsgHtml1 = 'Static thresholds for last 30 minutes, last updated <span class="last-updated-minutes">0 minutes</span> ago.', t.thresholdsMsgHtml2 = "Static thresholds for today CST.", t.now = new Date, t.lastDate = -1, t.minutesSinceLastUpdate = null, t.desktop = !1, null != t.incomingData.desktop && null != t.incomingData.desktop && (t.desktop = t.incomingData.desktop), t.filters = [{ label: "Country", active: "us", inputShowing: !1, filterValues: [] }, { label: "Segment", active: 1, inputShowing: !1, filterValues: [{ value: 1, label: "For Home" }, { value: 2, label: "For Work" }] }, { label: "Region", active: null, inputShowing: !1, filterValues: [] }, { label: "Identity", active: null, inputShowing: !1, filterValues: [] }], t.colors = ["#6E2585", "#EE6411", "#B7295A", "#0076CE", "#6EA204", "#F2AF00", "#41B6E6", "#CE1126", "#00447C", "#444444"], t.funnelColors = ["#EE6411", "#B7295A", "#6E2585", "#0076CE", "#6EA204", "#F2AF00"], t.statusColors = ["#CE1126", "#F2AF00", "#6EA204"], t.screenWidth = Response.viewportW(), t.svgWidth = t.screenWidth - 12, t.desktop && (t.svgWidth -= 16), t.svgHeight = .6 * t.svgWidth }, t.validateDataset = function () { var a = !0; return null != t.incomingData && null != t.incomingData.data && null != t.incomingData.data && Array.isArray(t.incomingData.data) && 0 !== t.incomingData.data.length || (a = !1), a ? t.data = t.incomingData.data : $(".graphs").html("Error: Invalid Dataset, cannot create any graphs."), a }, t.init = function () { if (t.validateDataset()) { $(".graphs-container").html("").append('<div class="filters"></div><div class="graphs"></div><div class="updated-label"></div>'), t.globalConfig(), t.createFilters(); for (var a = 0; a < t.data.length; a++)t.createGraphContainer(a), t.validateGraphData(a) && (t.createGraph(a), t.setLastUpdatedDate(a)); Response.resize(function () { t.hawkDebug && console.log("hawk.init @RESIZE"), t.screenWidth = Response.viewportW(), t.svgWidth = t.screenWidth - 12, t.desktop && (t.svgWidth -= 16), t.svgHeight = .6 * t.svgWidth; for (var a = 0; a < t.data.length; a++)t.validateGraphData(a) && (t.createGraph(a), t.setLastUpdatedDate(a)) }), $(".updated-label").html(t["thresholdsMsgHtml" + t.thresholdsMsg]), $(".last-updated-minutes").html(t.getMinutesSinceLastUpdate()), t.hawkDebug && (console.log("hawk.init @dataset="), console.log(t.data)) } }, t.init() };